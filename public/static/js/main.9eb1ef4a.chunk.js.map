{"version":3,"sources":["assets/imgs/main.png","services/httpService.js","services/reviewService.js","store/actions/reviewActions.js","pages/User/UserDetails.jsx","pages/Home.jsx","services/userService.js","store/actions/userActions.js","store/actions/systemActions.js","pages/Login.jsx","cmps/MyBtn.jsx","services/toyService.js","store/actions/toyActions.js","cmps/ToyPreview.jsx","cmps/Card.jsx","cmps/ToyList.jsx","cmps/ToyFilter.jsx","pages/Toy/ToyApp.jsx","cmps/Review/ReviewPreview.jsx","cmps/Review/ReviewList.jsx","pages/Toy/ToyReviews.jsx","pages/Toy/ToyDetails.jsx","services/imageService.js","pages/Toy/ToyEdit.jsx","cmps/MyChart.jsx","cmps/MyBarChart.jsx","cmps/ToyBars.jsx","cmps/Header.jsx","pages/About.jsx","pages/Review.jsx","App.jsx","serviceWorker.js","store/reducers/toyReducer.js","store/reducers/userReducer.js","store/reducers/filterReducer.js","store/reducers/reviewReducer.js","store/reducers/systemReducer.js","store/store.js","index.js"],"names":["module","exports","axios","Axios","create","withCredentials","endpoint","data","console","log","ajax","a","method","url","res","dir","response","status","window","location","assign","reviewService","add","query","filterBy","queryStr","name","_id","username","httpService","remove","reviewId","review","addedReview","loadReviews","dispatch","reviews","type","addReview","then","err","_User","loggedInUser","this","props","className","email","map","key","txt","aboutToy","byUser","Component","mapDispatchToProps","User","connect","state","userReducer","reviewReducer","_Home","to","Home","userService","login","logout","signup","getUsers","getById","userId","update","user","userCred","_handleLogin","sessionStorage","clear","setItem","JSON","stringify","addToCart","item","loadUsers","users","_Login","msg","loginCred","password","signupCred","loginHandleChange","ev","target","value","setState","prevState","signupHandleChange","doLogin","preventDefault","userCreds","history","push","doSignup","signupCreds","removeUser","signupSection","onSubmit","onChange","placeholder","loginSection","onClick","isLoading","Login","systemReducer","MyBtn","children","restOfProps","toyService","queryParams","URLSearchParams","set","minPrice","maxPrice","category","inStock","toyId","save","toy","getEmpty","price","getRandomColor","color","i","Math","floor","random","loadToys","toys","ToyPreview","onAddToCart","onRemove","src","imgUrl","IconButton","aria-label","Card","header","body","footer","img","ToyList","ToyFilter","handleChange","field","id","onSetFilter","htmlFor","autoComplete","_ToyApp","updateFilter","removeToy","prevProps","changeToysFilter","ToyApp","toyReducer","filterReducer","ReviewPreview","ReviewList","length","_ToyReviews","reviewToEdit","aboutToyId","byUserId","match","params","ToyReviews","_ToyDetails","componentDidMount","createdAt","style","backgroundColor","ToyDetails","imageService","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","json","_ToyEdit","onSave","values","formikBag","saveToy","updatedToy","secure_url","textN","TextField","label","textC","NuberField","InputLabelProps","shrink","onUpdateImg","initialValues","as","checked","Button","savedToy","ToyEdit","_MyChart","getToysData","reduce","acc","val","categories","Object","keys","size","bgc","bgcHover","labels","datasets","hoverBackgroundColor","MyChart","_MyBarChart","getToysCategoryData","categoriesPrices","prices","cat","priceAvg","forEach","idx","borderColor","borderWidth","hoverBorderColor","options","maintainAspectRatio","MyBarChart","_ToyBars","ToyBars","Header","loggedinUser","cartItems","withRouter","image","require","alt","_About","About","_Review","aboutUserId","Review","App","component","path","Boolean","hostname","initialState","localLoggedinUser","parse","selectedReview","rootReducer","combineReducers","action","filter","balance","spendAmount","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9eb1ef4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main.6a6632f0.png\";","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        console.log('data-', data);\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import httpService from './httpService';\r\n\r\nexport const reviewService = {\r\n  add,\r\n  query,\r\n  remove\r\n};\r\n\r\n\r\n// return axios.get('api/toy/?id=1223&balance=13');\r\n// return axios.get('api/toy/?', {params: {id: 1223, balanse:13}});\r\n\r\n\r\nfunction query(filterBy) {\r\n  console.log('fffff-', filterBy);\r\n  var queryStr;\r\n  if (filterBy.name) queryStr = `?aboutToyId=${filterBy._id}`;\r\n  else if (filterBy.username) queryStr =`?byUserId=${filterBy._id}`;\r\n  return httpService.get(`review${queryStr || ''}`);\r\n}\r\n\r\nfunction remove(reviewId) {\r\n  return httpService.delete(`review/${reviewId}`);\r\n}\r\nasync function add(review) {\r\n  const addedReview  = await httpService.post(`review`, review);\r\n  return  addedReview\r\n}\r\n","import {reviewService} from '../../services/reviewService';\r\n\r\nexport function loadReviews(filterBy) {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query(filterBy);\r\n      dispatch({ type: 'SET_REVIEWS', reviews });\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      reviewService.add(review)\r\n      .then(addedReview=>{\r\n        console.log('addedreciew-',addedReview);\r\n        dispatch({ type: 'REVIEW_ADD', addedReview });\r\n      })\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err);\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {loadReviews} from '../../store/actions/reviewActions'\r\n\r\nclass _User extends Component {\r\n\r\n    componentDidMount(){\r\n        let loggedInUser = this.props.loggedInUser\r\n        console.log(loggedInUser);\r\n        let filterBy = loggedInUser\r\n        this.props.loadReviews(filterBy)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"home\">\r\n                    <h1> User Profile </h1>\r\n                    <h3>Personal Information:</h3>\r\n                    {this.props.loggedInUser && <ul>\r\n                        <li>email: {`${this.props.loggedInUser.email}`}</li></ul>}\r\n                    <h4> reviews by this user: </h4>\r\n                    {this.props.reviews && <ul>\r\n                    {this.props.reviews.map(review => (\r\n                        <li key={review._id}>\r\n                            <h3>{review.txt}</h3>\r\n                            <p>\r\n                                    About {review.aboutToy.name}\r\n                            </p>\r\n                            <p>\r\n                                    By {review.byUser.username}\r\n                            </p>\r\n                            <hr />\r\n                        </li>\r\n                    ))}\r\n                </ul>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.userReducer.loggedInUser,\r\n        reviews: state.reviewReducer.reviews\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadReviews,\r\n}\r\nexport const User = connect(mapStateToProps, mapDispatchToProps)(_User)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass _Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                    <h1> Home </h1>\r\n                    <Link to=\"/login\">Login</Link> \r\n                    <Link to =\"/user\">User Profile</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Home = connect()(_Home)","import httpService from './httpService'\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update\r\n}\r\n\r\nfunction getUsers() {\r\n    return httpService.get('user')\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nfunction update(user) {\r\n    return httpService.put(`user/${user._id}`, user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await httpService.post('auth/login', userCred)\r\n    return _handleLogin(user)\r\n}\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\nasync function logout() {\r\n    \r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}","\r\nimport {userService} from '../../services/userService.js'\r\nimport { loading, doneLoading } from './systemActions';\r\n\r\nexport function addToCart(item) {\r\n    return dispatch => dispatch({ type: 'ADD_TO_CART', item })\r\n}\r\nexport function clearCart() {\r\n    return dispatch => dispatch({ type: 'CLEAR_CART' })\r\n}\r\nexport function checkout() {\r\n    return (dispatch, getState) => {\r\n        console.log('state', getState());\r\n        const { cartItems } = getState().userReducer\r\n        const userBalance = getState().userReducer.loggedinUser.balance\r\n        const totalPrice = cartItems.reduce((acc, item) => acc += item.price, 0)\r\n        if (userBalance < totalPrice) return Promise.reject('You dont have enough cash!')\r\n        // Here call the service and make change in backend\r\n        dispatch({ type: 'SPEND_BALANCE', spendAmount: totalPrice })\r\n        dispatch({ type: 'CLEAR_CART' })\r\n        return Promise.resolve('Checked out successfully')\r\n    }\r\n}\r\n\r\n// THUNK\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n      try {\r\n        // example for loading\r\n        dispatch(loading());\r\n        const users = await userService.getUsers();\r\n        dispatch({ type: 'SET_USERS', users });\r\n      } catch (err) {\r\n        console.log('UserActions: err in loadUsers', err);\r\n        // example for rerouting - after changing the store\r\n        // history.push('/some/path');\r\n      } finally {\r\n        dispatch(doneLoading());\r\n      }\r\n    };\r\n  }\r\n  // THUNK\r\n  export function removeUser(userId) {\r\n    return async dispatch => {\r\n      try {\r\n        await userService.remove(userId);\r\n        dispatch({ type: 'USER_REMOVE', userId });\r\n      } catch (err) {\r\n        console.log('UserActions: err in removeUser', err);\r\n      }\r\n    };\r\n  }\r\n  // THUNK\r\n  export function login(userCreds) {\r\n    return async dispatch => {\r\n      const user = await userService.login(userCreds);\r\n      dispatch({ type: 'SET_USER', user });\r\n    };\r\n  }\r\n  export function signup(userCreds) {\r\n    return async dispatch => {\r\n      const user = await userService.signup(userCreds);\r\n      dispatch({ type: 'SET_USER', user });\r\n    };\r\n  }\r\n  export function logout() {\r\n    console.log('inside');\r\n    return async dispatch => {\r\n      await userService.logout();\r\n      dispatch({ type: 'SET_USER', user: null });\r\n    };\r\n  }\r\n  ","export function loading() {\r\n  return { type: 'LOADING_START' }\r\n}\r\nexport function doneLoading() {\r\n  return { type: 'LOADING_DONE' }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  loadUsers,\r\n  removeUser,\r\n  login,\r\n  logout,\r\n  signup\r\n} from '../store/actions/userActions';\r\n\r\nclass _Login extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    signupCred: {\r\n      email: '',\r\n      password: '',\r\n      username: ''\r\n    }\r\n  };\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault();\r\n    const { email, password } = this.state.loginCred;\r\n    if (!email || !password) {\r\n      return this.setState({ msg: 'Please enter user/password' });\r\n    }\r\n    const userCreds = { email, password };\r\n    this.props.login(userCreds);\r\n    this.setState({ loginCred: { email: '', password: '' } });\r\n    this.props.history.push('/toy')\r\n  };\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault();\r\n    const { email, password, username } = this.state.signupCred;\r\n    if (!email || !password || !username) {\r\n      return this.setState({ msg: 'All inputs are required!' });\r\n    }\r\n    const signupCreds = { email, password, username };\r\n    this.props.signup(signupCreds);\r\n    this.setState({ signupCred: { email: '', password: '', username: '' } });\r\n    this.props.history.push('/toy')\r\n  };\r\n\r\n  removeUser = userId => {\r\n    this.props.removeUser(userId);\r\n  };\r\n  render() {\r\n    let signupSection = (\r\n      <form onSubmit={this.doSignup}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={this.state.signupCred.email}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <br />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Username\"\r\n        />\r\n        <br />\r\n        <button>Signup</button>\r\n      </form>\r\n    );\r\n    let loginSection = (\r\n      <form onSubmit={this.doLogin}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={this.state.loginCred.email}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <button>Login</button>\r\n      </form>\r\n    );\r\n\r\n    const { loggedInUser } = this.props;\r\n    return (\r\n      <div className=\"test\">\r\n        <h4 className=\"clr5\">\r\n          This is a testing page for working with the Production Ready Server\r\n        </h4>\r\n        <h2>{this.state.msg}</h2>\r\n        {loggedInUser && (\r\n          <div>\r\n            <h2>Welcome: {loggedInUser.username} </h2>\r\n            <button onClick={this.props.logout}>Logout</button>\r\n          </div>\r\n        )}\r\n        {!loggedInUser && loginSection}\r\n        {!loggedInUser && signupSection}\r\n        {/* <h2>Login</h2>\r\n        <form>div</form>\r\n\r\n        <h2>Signup</h2>\r\n        <form></form> */}\r\n\r\n        <hr />\r\n        <button onClick={this.props.loadUsers}>Get All Users</button>\r\n        {this.props.isLoading && 'Loading...' }\r\n        {this.props.users && <ul>\r\n\r\n          {this.props.users.map(user => (\r\n            <li key={user._id}>\r\n              <pre>{JSON.stringify(user, null, 2)}</pre>\r\n              <button\r\n                onClick={() => {\r\n                  this.removeUser(user._id);\r\n                }}\r\n              >\r\n                Remove {user.username}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.userReducer.users,\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n    isLoading: state.systemReducer.isLoading\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers\r\n};\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login);\r\n","import React from 'react'\r\n\r\nexport function MyBtn({ children, ...restOfProps }) {\r\n    return (\r\n        <button { ...restOfProps }>{ children }</button>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport httpService from './httpService';\r\n// const BASE_URL = 'http://localhost:3030/api/toy'\r\nconst BASE_URL = (process.env.NODE_ENV !== 'development') ? '/api/toy' : 'http://localhost:3030/api/toy';\r\n\r\n\r\nconst resolveData = res => res.data\r\n\r\nexport const toyService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    save,\r\n    getEmpty,\r\n    getRandomColor\r\n    // getToysForDisplay,\r\n}\r\n\r\nfunction query(filterBy = {}) {\r\n    var queryParams = new URLSearchParams();\r\n    queryParams.set('name',filterBy.name || '');\r\n    queryParams.set('minPrice',filterBy.minPrice || '');\r\n    queryParams.set('maxPrice',filterBy.maxPrice || '');\r\n    queryParams.set('category',filterBy.category || '');\r\n    queryParams.set('inStock',filterBy.inStock || '');\r\n    return httpService.get(`toy?${queryParams}`)\r\n    // return axios.get(`${BASE_URL}`,{params : filterBy})\r\n        // .then(resolveData)\r\n}\r\n\r\nfunction getById(toyId) {\r\n    return httpService.get(`toy/${toyId}`, toyId)\r\n    // return axios.get(`${BASE_URL}/${toyId}`)\r\n    //     .then(resolveData)\r\n}\r\n\r\nfunction remove(toyId) {\r\n    return httpService.delete(`toy/${toyId}`)\r\n    // return axios.delete(`${BASE_URL}/${toyId}`)\r\n}\r\n\r\nfunction save(toy) {\r\nconsole.log('toy to save-', toy);\r\n    if (toy._id) {\r\n        return httpService.put(`toy/${toy._id}`, toy)\r\n        // return axios.put(`${BASE_URL}/${toy._id}`, toy).then(resolveData)\r\n    } else {\r\n        return httpService.post('toy', toy)\r\n        // return axios.post(BASE_URL, toy).then(resolveData)\r\n    }\r\n}\r\n\r\n\r\nfunction getEmpty(){\r\n    return  {\r\n        name: '',\r\n        price: 0,\r\n        category: '',\r\n        inStock: false\r\n    }\r\n}\r\n\r\nfunction getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }","import { toyService } from '../../services/toyService'\r\n\r\n\r\nexport function loadToys(filterBy) {\r\n    return dispatch => {\r\n        toyService.query(filterBy).then(toys => {\r\n            dispatch({ type: 'SET_TOYS', toys })\r\n        })\r\n    }\r\n}\r\n\r\nexport function changeToysFilter(filterBy) {\r\n    console.log('action-', filterBy);\r\n    return dispatch => {\r\n        toyService.query(filterBy).then(toys => {\r\n            dispatch({ type: 'SET_TOYS', toys })\r\n        })\r\n    }\r\n}\r\n\r\nexport function removeToy(_id) {\r\n    return dispatch => {\r\n        toyService.remove(_id).then(() => {\r\n            dispatch({ type: 'REMOVE_TOY', _id })\r\n        })\r\n    }\r\n}\r\n\r\nexport function updateFilter(filterBy) {\r\n    console.log('filter in action-', filterBy);\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filterBy })\r\n    }\r\n}\r\n\r\n\r\nexport function saveToy(toy) {\r\n    return dispatch => {\r\n        toyService.save(toy)\r\n            .then((savedToy) => {\r\n                console.log(savedToy);\r\n                dispatch({ type: 'SAVE_TOY', savedToy });\r\n            })\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nexport function ToyPreview({ toy, onAddToCart, onRemove }) {\r\n\r\n    async function uploadImg(ev) {\r\n        const CLOUD_NAME = \"dwykoqry\"\r\n        const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    \r\n        const formData = new FormData();\r\n        formData.append('file', ev.target.files[0])\r\n        formData.append('upload_preset', 'webify');\r\n        try {\r\n            const res = await fetch(UPLOAD_URL, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            const data = await res.json()\r\n            console.log(data);\r\n            return data\r\n    \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        // .then(res => res.json())\r\n        // .then(res => {\r\n        //     console.log(res)\r\n        //     // res.secure_url\r\n        //     return res\r\n        // })\r\n        // .catch (err => console.error(error))\r\n    }\r\n\r\n\r\n    // const image = toy.hasImg ? require(`../assets/imgs/${toy._id}.jpg`) : require(`../assets/imgs/default.jpg`)\r\n    return (\r\n        <div className=\"card-toy card flex column\">\r\n            <ul className=\"toy-info\">\r\n                <img className=\"img\" src={`${toy.imgUrl}`}/>\r\n                <div className=\"body-card tac\">\r\n                    <li>{`Price: ${toy.price}`}</li>\r\n                    <li>{`Category: ${toy.category}`}</li>\r\n                    <li>{`Available: ${(toy.inStock) ? 'YES!' : 'NOT AVAILABLE'}`}</li>\r\n                </div>\r\n                <div className= \"btn\">\r\n                    <IconButton aria-label=\"add to shopping cart\" onClick={() => onAddToCart(toy)}>\r\n                        <AddShoppingCartIcon className=\"clr1\"/>\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"delete\" onClick={() => onRemove(toy._id)}><DeleteIcon className=\"clr1\"/></IconButton>\r\n                    <Link to={`/toy/edit/${toy._id}`}><IconButton aria-label=\"edit\"><EditIcon className=\"clr1\"/></IconButton></Link>\r\n                    <Link to={`/toy/${toy._id}`}><IconButton aria-label=\"details\"><InfoIcon className=\"clr1\"/></IconButton></Link>\r\n                </div>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// Creating an illusion of slots\r\nexport function Card({ header, body, footer, img }) {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <h3 className=\"card-title tac\">{ header }</h3>\r\n            {/* { img && <img src={ img } alt=\"\" /> } */}\r\n            <div>{ body }</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ToyPreview } from './ToyPreview'\r\nimport { Card } from './Card'\r\n\r\nexport function ToyList({ toys,  onRemove }) {\r\n    return (\r\n        <div className= \"card-grid\">\r\n            {\r\n                toys.map(toy=>\r\n                <Card key={ toy._id } header={ toy.name } body={ <ToyPreview toy={ toy } \r\n                onRemove={onRemove}/> } footer='The footer' />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n//onAddToCart,\r\n//onAddToCart={onAddToCart}","import React, { Component } from 'react'\r\n// import { connect } from 'react-redux'\r\n\r\nexport class ToyFilter extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        minPrice: '',\r\n        maxPrice: '',\r\n        inStock: '',\r\n        category: ''\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log('inside!');\r\n        let field;\r\n        (target.name) ? field = target.name : field = target.id;\r\n        const value = target.type === 'number' ? +target.value : target.value\r\n        this.setState({ [field]: value }, () => this.props.onSetFilter(this.state))\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"fs16 filter\">\r\n                <div>\r\n                    <label htmlFor=\"\">By Name</label>\r\n                    <input name=\"name\" autoComplete=\"off\" value={this.state.name} onChange={this.handleChange} type=\"text\" />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"\">Min-Price</label>\r\n                    <input type=\"number\" name=\"minPrice\" onChange={this.handleChange} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"\">Max-Price</label>\r\n                    <input type=\"number\" name=\"maxPrice\" onChange={this.handleChange} />\r\n                </div>\r\n                <div>\r\n                <label htmlFor=\"inStock\">Availabile</label>\r\n                <select id=\"inStock\" onChange={this.handleChange}>\r\n                    <option value=\"all\" >All</option>\r\n                    <option value=\"yes\">Yes</option>\r\n                    <option value=\"no\">No</option>\r\n                </select>\r\n                </div>\r\n                <div>\r\n                <label htmlFor=\"category\">Category</label>\r\n                <select id=\"category\" onChange={this.handleChange}>\r\n                    <option value=\"all\" >All</option>\r\n                    <option value=\"Adult\">Adult</option>\r\n                    <option value=\"Funny\">Funny</option>\r\n                    <option value=\"Educational\">Educational</option>\r\n                </select>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { MyBtn } from '../../cmps/MyBtn'\r\nimport { loadToys, changeToysFilter, removeToy, updateFilter } from '../../store/actions/toyActions'\r\nimport { ToyList } from '../../cmps/ToyList'\r\nimport { toyService } from '../../services/toyService'\r\nimport { addToCart } from '../../store/actions/userActions'\r\nimport { ToyFilter } from '../../cmps/ToyFilter'\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\n\r\nclass _ToyApp extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadToys(this.props.filterBy)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.filterBy) return;\r\n        if (prevProps.filterBy.name !== this.props.filterBy.name ||\r\n            prevProps.filterBy.maxPrice !== this.props.filterBy.maxPrice ||\r\n            prevProps.filterBy.minPrice !== this.props.filterBy.minPrice ||\r\n            prevProps.filterBy.inStock !== this.props.filterBy.inStock ||\r\n            prevProps.filterBy.category !== this.props.filterBy.category) {\r\n            this.props.loadToys(this.props.filterBy)\r\n        }\r\n    }\r\n\r\n    onAddToCart = (toy) => {\r\n        this.props.addToCart(toy)\r\n    }\r\n\r\n    onSetFilter = (filterBy) => {\r\n        this.props.updateFilter(filterBy);\r\n    }\r\n\r\n    onRemove = (_id) => {\r\n        this.props.removeToy(_id)\r\n    }\r\n    render() {\r\n        const { toys} = this.props\r\n        console.log('toys-', toys);\r\n        if (!toys) return <div>Loading....</div>\r\n        return (\r\n            <div className=\"toy-app app main-container app-container\">\r\n                <div>\r\n                <h4 className= \"clr1\">sort Format</h4>\r\n                    <ToyFilter onSetFilter={this.onSetFilter} />\r\n                    <Link to={`/toy/bar/`}><IconButton aria-label=\"edit\"><EqualizerIcon/></IconButton></Link>\r\n                    <Link to={`/toy/edit`}><IconButton aria-label=\"edit\"><AddIcon/></IconButton></Link>\r\n                    <Link to={`/review`}><IconButton aria-label=\"edit\"><FeedbackIcon/></IconButton></Link>\r\n                </div>\r\n                <ToyList toys={toys} onAddToCart={this.onAddToCart} onRemove={this.onRemove} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n        filterBy: state.filterReducer.filterBy\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadToys,\r\n    addToCart,\r\n    changeToysFilter,\r\n    removeToy,\r\n    updateFilter\r\n}\r\nexport const ToyApp = connect(mapStateToProps, mapDispatchToProps)(_ToyApp)\r\n\r\n","import React from 'react'\r\n\r\nexport function ReviewPreview({ review , user}) {\r\n    return (\r\n        <li key={review._id}>\r\n            <h3>{review.txt}</h3>\r\n            <p> By {(review.byUser)? review.byUser.username : user.username} </p>\r\n            <hr />\r\n        </li>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { ReviewPreview } from './ReviewPreview'\r\n\r\nexport function ReviewList({reviews, user}) {\r\n    console.log('reviewlist-', reviews);\r\n    if (!reviews || reviews.length === 0) return <h1>there are no reviews</h1>\r\n    return (\r\n        <div className=\"card-grid\">\r\n            {reviews.map(review =><ReviewPreview key={review._id} review={review} user={user}/>)}\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { loadUsers } from '../../store/actions/userActions';\r\nimport { toyService} from '../../services/toyService'\r\nimport { loadReviews, addReview } from '../../store/actions/reviewActions'\r\nimport {ReviewList} from '../../cmps/Review/ReviewList'\r\n\r\n\r\nclass _ToyReviews extends Component {\r\n\r\n    state = {\r\n        reviewToEdit: {\r\n            txt: '',\r\n            aboutToyId: '',\r\n            byUserId:''\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.loadUsers();\r\n        const { toyId } = this.props.match.params;\r\n        toyService.getById(toyId)\r\n        .then(toy => {\r\n            this.props.loadReviews(toy);\r\n            const aboutToyId = toy._id;\r\n            const byUserId = this.props.loggedInUser._id;\r\n            this.setState({reviewToEdit: {...this.state.reviewToEdit , byUserId ,aboutToyId }}, ()=>console.log(this.state))\r\n        })\r\n    }   \r\n    \r\n    handleChange = ev => {\r\n        const { name, value } = ev.target;\r\n        this.setState(prevState => ({\r\n            reviewToEdit: {\r\n                ...prevState.reviewToEdit,\r\n                [name]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    \r\n    addReview = async (ev) => {\r\n        ev.preventDefault();\r\n        await this.props.addReview(this.state.reviewToEdit);\r\n        this.setState({ reviewToEdit: { txt: '', aboutToyId: '' } });\r\n    };\r\n    \r\n    render() {\r\n        const {reviews} = this.props\r\n        return (\r\n            <div className=\"home\">\r\n                    <h1> Reviews- </h1>\r\n                {reviews && <ul>\r\n                    {console.log(reviews)}\r\n                    <ReviewList reviews={reviews} user={this.props.loggedInUser}/>\r\n                </ul>}\r\n                {this.props.users && this.props.loggedInUser &&\r\n                    <form onSubmit={this.addReview}>\r\n                        <textarea\r\n                            name=\"txt\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.reviewToEdit.txt}\r\n                        ></textarea>\r\n                        <button>Submit</button>\r\n                    </form>}\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n        reviews: state.reviewReducer.reviews,\r\n        users: state.userReducer.users,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadReviews,\r\n    addReview,\r\n    loadUsers\r\n}\r\n\r\nexport const ToyReviews = connect(mapStateToProps, mapDispatchToProps)(_ToyReviews)\r\n\r\n","\r\nimport { Link } from 'react-router-dom';\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addToCart } from '../../store/actions/userActions'\r\nimport { loadToys } from '../../store/actions/toyActions'\r\nimport { toyService } from '../../services/toyService'\r\nimport { MyBtn } from '../../cmps/MyBtn'\r\nimport { ToyReviews } from './ToyReviews';\r\n\r\nclass _ToyDetails extends Component {\r\n\r\n    state = {\r\n        _id: '',\r\n        toy: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const { toyId } = this.props.match.params;\r\n        toyService.getById(toyId)\r\n            .then(toy => {\r\n                this.setState({ _id: toyId, toy })\r\n            })\r\n    }\r\n\r\n    onAddToCart = (toy) => {\r\n        this.props.addToCart(toy)\r\n    }\r\n\r\n    render() {\r\n        const { _id, toy } = this.state;\r\n        if (!_id) return <h1>Loading...</h1>\r\n        return (<div className=\"main-header\">\r\n            <h1>ToyDetails :) </h1>\r\n            <h2>Name: {toy.name}</h2>\r\n            <h2>Price: ${toy.price}</h2>\r\n            <h3>Availability:{(toy.inStock) ?<span className=\"clr2\"> 'YES!'</span> : <span className=\"clr1\"> NOT AVAILABLE!</span>}</h3>\r\n            <h3>Creation-Time:{toy.createdAt}</h3>\r\n            <h3>Description:</h3>\r\n            <pre className=\"ch50\">Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n                Officiis mollitia et pariatur nulla excepturi eveniet dolore\r\n                obcaecati sint perspiciatis, iure quae eaque velit culpa,\r\n                soluta reiciendis? Nostrum, iure. Hic, modi.\r\n            </pre>\r\n            <MyBtn onClick={() => this.onAddToCart(toy)} style={{ backgroundColor: 'yellow' }} >ADD TO CART</MyBtn>\r\n            <MyBtn onClick={() => this.props.history.push('/toy')} style={{ backgroundColor: 'yellow' }}>BACK TO STORE</MyBtn>\r\n            <Link to={`/toy/review/${_id}`}>Reviews</Link>\r\n        </div>\r\n         ) }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadToys,\r\n    addToCart\r\n}\r\nexport const ToyDetails = connect(mapStateToProps, mapDispatchToProps)(_ToyDetails)\r\n","export const imageService={\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(ev) {\r\n    const CLOUD_NAME = \"dygtul5wx\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', ev.target.files[0])\r\n    formData.append('upload_preset', 'dwykoqry');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        console.log(data);\r\n        return data\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    // .then(res => res.json())\r\n    // .then(res => {\r\n    //     console.log(res)\r\n    //     // res.secure_url\r\n    //     return res\r\n    // })\r\n    // .catch (err => console.error(error))\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { imageService} from '../../services/imageService'\r\nimport { toyService } from '../../services/toyService'\r\nimport { saveToy } from '../../store/actions/toyActions'\r\n\r\nclass _ToyEdit extends Component {\r\n\r\n    state = {\r\n        toy: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const toyId = this.props.match.params.toyId;\r\n        console.log('toyId-', toyId);\r\n        if (toyId) {\r\n            toyService.getById(toyId)\r\n                .then(toy => {\r\n                    console.log('toy', toy);\r\n                    this.setState({ toy })\r\n                })\r\n        } else {\r\n            const toy = toyService.getEmpty();\r\n            this.setState({ toy });\r\n        }\r\n    }\r\n    \r\n    async onUpdateImg(ev){\r\n        const img = await imageService.uploadImg(ev)\r\n        let updatedToy = this.state.toy;\r\n        updatedToy.imgUrl = img.secure_url;\r\n        this.props.saveToy(updatedToy)\r\n        this.props.history.push('/toy')\r\n    }\r\n\r\n    // handleField = ({ target }) => {\r\n    //     const field = target.name\r\n    //     const value = (target.type === 'number') ? +target.value : target.value\r\n    //     this.setState(prevState => {\r\n    //         return {\r\n    //             toy: {\r\n    //                 ...prevState.toy,\r\n    //                 [field]: value\r\n    //             }\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n\r\n\r\n    onSave = (values, formikBag) => {\r\n        this.props.saveToy(values)\r\n        this.props.history.push('/toy')\r\n    }\r\n\r\n\r\n    render() {\r\n        const { toy } = this.state;\r\n        const {loggedInUser} = this.state;\r\n        console.log('loged-',loggedInUser)\r\n        const textN = (props) => <TextField {...props} label=\"name\" type=\"text\" autoComplete=\"current-name\" />\r\n        const textC = (props) => <TextField {...props} label=\"category\" type=\"text\" autoComplete=\"current-name\" />\r\n        const NuberField = (props) => <TextField {...props} label=\"Number\" type=\"number\" InputLabelProps={{ shrink: true, }} />\r\n        if (!toy) return <h1>Loading...</h1>\r\n\r\n        let _id = null;\r\n        const { name, price, category, imgUrl} = toy;\r\n        if(toy._id) _id= toy._id;\r\n        var inStock = false;\r\n        console.log('propeeties-', name, price, category, inStock, imgUrl)\r\n        return (\r\n            <div >\r\n                <label>Upload Image\r\n                    <input onChange={(ev)=> this.onUpdateImg(ev)} type=\"file\"/>\r\n                </label>\r\n                <Formik  onSubmit={this.onSave} \r\n                    initialValues={{_id, name, price, category, inStock }}\r\n                >\r\n                    {\r\n                        ({values})=>{ return (\r\n                            <Form className= \"filter\">\r\n                            <div>\r\n                            <label htmlFor=\"txt\">Toy name</label>\r\n                            <Field type=\"text\" name='name' as={textN} />\r\n                            </div>\r\n                            <div>\r\n                            <label htmlFor=\"txt\"> Price </label>\r\n                            <Field type=\"number\" name='price' as={NuberField} />\r\n                            </div>\r\n                            <div>\r\n                            <label htmlFor=\"txt\"> Category </label>\r\n                            <Field type=\"text\" name='category' as={textC} />\r\n                            </div>\r\n                            <div>\r\n                            <Field type=\"checkbox\" name='inStock' checked= {values.inStock} />\r\n                            <Button type=\"submit\">Save</Button>\r\n                            <Button onClick={() => this.props.history.push('/toy')}>Back to store</Button>\r\n                            </div>\r\n                        </Form>\r\n                        )\r\n\r\n                        }\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n        loggedInUser: state.userReducer.loggedInUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveToy,\r\n}\r\nexport const ToyEdit = connect(mapStateToProps, mapDispatchToProps)(_ToyEdit)\r\n\r\n\r\n// componentDidMount() {\r\n//     const toyId = this.props.match.params.toyId;\r\n//     if (toyId) {\r\n//         toyService.getById(toyId)\r\n//             .then(toy => {\r\n//                 console.log('toy',toy);\r\n//                 this.setState({ toy })})\r\n//     } else {\r\n//         const toy = toyService.getEmpty();\r\n//         this.setState({ toy });\r\n//     }\r\n// }\r\n\r\n// handleField = ({ target }) => {\r\n//     const field = target.name\r\n//     const value = (target.type === 'number') ? +target.value : target.value\r\n//     this.setState(prevState => {\r\n//         return {\r\n//             toy: {\r\n//                 ...prevState.toy,\r\n//                 [field]: value\r\n//             }\r\n//         }\r\n//     })\r\n// }\r\n\r\n// onSave = (ev) => {\r\n//     ev.preventDefault()\r\n//     this.props.saveToy(this.state.toy)\r\n//     this.props.history.push('/toy')\r\n// }\r\n\r\n\r\n// render() {\r\n\r\n//     const { toy } = this.state;\r\n//     if (!toy) return <h1>Loading...</h1>\r\n//     const { name, price, category, inStock } = toy;\r\n//     return (\r\n//         // <MyForm \r\n//         <form onSubmit={(event) => this.onSave(event, toy)}>\r\n//             <label htmlFor=\"txt\">Toy name</label>\r\n//             <Field type=\"text\" id=\"txt\" value={name || ''} name ='name' onChange={this.handleField} placeholder=\"toy name\" />\r\n//             <label htmlFor=\"txt\"> Price </label>\r\n//             <Field type=\"number\" value={price || 0} name = 'price' onChange={this.handleField} />\r\n//             <label htmlFor=\"txt\"> Category </label>\r\n//             <Field type=\"text\" value={category || ''} name ='category' onChange={this.handleField} />\r\n//             <label htmlFor=\"txt\"> stcok </label>\r\n//             <Field type=\"checkbox\" value={inStock} name ='inStock' onChange={this.handleField} />\r\n//             <button onClick={this.onSave}>Save</button>\r\n//             <button onClick={() => this.props.history.push('/toy')}>back to stor</button>\r\n//         </form>\r\n//     )\r\n// }\r\n// }","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { toyService } from '../services/toyService'\r\n\r\n\r\n\r\nclass _MyChart extends Component {\r\n\r\n    getToysData = () => {\r\n        let {toys} = this.props;\r\n        let categories = toys.reduce(function (acc, val) {\r\n            if (!acc[val.category]) acc[val.category] = 0;\r\n            acc[val.category]++;\r\n            return acc;\r\n        }, {});\r\n       return categories;\r\n    }\r\n\r\n    render() {\r\n        const categories = this.getToysData();\r\n        if (!Object.keys(categories).length) return <div>loading</div>\r\n        const size = Object.keys(categories).map((key) => [(key)]);\r\n        let bgc = [];\r\n        let bgcHover = [];\r\n        for (let i = 0; i < size.length; i++) {\r\n            bgc.push(toyService.getRandomColor());\r\n            bgcHover.push(toyService.getRandomColor());\r\n        }\r\n        const data = {\r\n            labels: Object.keys(categories),\r\n            datasets: [{\r\n                data: Object.values(categories),\r\n                backgroundColor: [...bgc],\r\n                hoverBackgroundColor: [...bgcHover]\r\n            }]\r\n        };\r\n        return (\r\n            <div>\r\n                <Pie data={data} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n    }\r\n}\r\n\r\nexport const MyChart = connect(mapStateToProps)(_MyChart)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { toyService } from '../services/toyService'\r\n\r\n\r\n\r\nclass _MyBarChart extends Component {\r\n\r\n    getToysCategoryData = () => {\r\n        const { toys } = this.props;\r\n        let categoriesPrices = toys.reduce(function (acc, val) {\r\n            if (!acc[val.category]) acc[val.category] = 0;\r\n            acc[val.category] += val.price;\r\n            return acc;\r\n        }, {});\r\n        return categoriesPrices;\r\n    }\r\n\r\n    getToysData = () => {\r\n        let { toys } = this.props;\r\n        let categories = toys.reduce(function (acc, val) {\r\n            if (!acc[val.category]) acc[val.category] = 0;\r\n            acc[val.category]++;\r\n            return acc;\r\n        }, {});\r\n        return categories;\r\n    }\r\n\r\n    render() {\r\n        const { toys } = this.props;\r\n        const categories = this.getToysData();\r\n        const categoriesPrices = this.getToysCategoryData();\r\n        let prices = Object.values(categoriesPrices);\r\n        let cat = Object.values(categories);\r\n        let priceAvg = [];\r\n        prices.forEach((price, idx)=> priceAvg.push(price/ cat[idx]))\r\n        if (!Object.keys(categories).length) return <div>loading</div>\r\n\r\n        const data = {\r\n            labels: Object.keys(categories),\r\n            datasets: [\r\n                {\r\n                    label: 'CATEGORY WITH PRICES',\r\n                    backgroundColor: 'rgba(295,149,88,0.2)',\r\n                    borderColor: 'rgba(255,99,14,1)',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                    hoverBorderColor: 'rgba(255,99,132,1)',\r\n                    data: priceAvg\r\n                }\r\n            ]\r\n        };\r\n        return (\r\n            <div>\r\n                <Bar\r\n                    data={data}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n    }\r\n}\r\n\r\nexport const MyBarChart = connect(mapStateToProps)(_MyBarChart)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadToys } from '../store/actions/toyActions'\r\nimport { MyChart } from './MyChart'\r\nimport { MyBarChart } from './MyBarChart'\r\n\r\nclass _ToyBars extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.loadToys(this.props.filterBy)\r\n    }\r\n\r\n    render() {\r\n        const { toys} = this.props\r\n        console.log(toys);\r\n        return (\r\n            <div>\r\n                <MyChart toys={toys} />\r\n                <MyBarChart />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadToys,\r\n}\r\n\r\n    const mapStateToProps = state => {\r\n        return {\r\n            toys: state.toyReducer.toys,\r\n        }\r\n    }\r\n\r\n    export const ToyBars = connect(mapStateToProps,mapDispatchToProps)(_ToyBars)","\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import { checkout, clearCart } from '../store/actions/userActions.js'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport VideogameAssetIcon from '@material-ui/icons/VideogameAsset';\r\n\r\n\r\n\r\nfunction _Header(props) {\r\n    //     const { user, cartItems } = props;\r\n    //     const totalPrice = cartItems.reduce((acc, item) => acc += item.price, 0)\r\n\r\n    //     const onCheckout = () => {\r\n    //         props.checkout()\r\n    //             .catch(err => alert(err))\r\n    //             .then(() => {\r\n    //                 props.history.push('/')\r\n    //             })\r\n    //     }\r\n\r\n    //{user.balance}\r\n    //{ user.name }\r\n    //{ cartItems.length }\r\n    //{ totalPrice.toFixed(2) }\r\n    //onClick={ onCheckout }\r\n    //onClick={ props.clearCart }\r\n    const image = require('../assets/imgs/main.png')\r\n    return <header className=\"main-header\">\r\n        <div className=\"nav\">\r\n            <h3>User: </h3>\r\n            <h3>Balance: $5000 </h3>\r\n            <h3>Items in your Cart: 100 </h3>\r\n            <h3>Total price: </h3>\r\n            <nav className=\"nav-btn\">\r\n                <NavLink to=\"/\"><IconButton aria-label=\"home\"><HomeIcon /></IconButton></NavLink> \r\n                <NavLink to=\"/toy\"><IconButton aria-label=\"toy-stor\"><VideogameAssetIcon /></IconButton></NavLink> \r\n            </nav>\r\n        </div>\r\n        <img className=\"logo\" src={image} alt=\"\" />\r\n        <h1>My Shop</h1>\r\n    </header>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n        cartItems: state.userReducer.cartItems,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    // checkout,\r\n    // clearCart\r\n}\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Header))","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import { Link } from 'react-router-dom'\r\n// import { MyBtn } from '../cmps/MyBtn'\r\n\r\nclass _About extends Component {\r\n    render(){return <div>about</div>}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n\r\n}\r\nexport const About = connect(mapStateToProps, mapDispatchToProps)(_About)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { loadReviews, addReview } from '../store/actions/reviewActions'\r\nimport { loadUsers } from '../store/actions/userActions';\r\n\r\nclass _Review extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadReviews();\r\n    }\r\n\r\n    addReview = ev => {\r\n        ev.preventDefault();\r\n        this.props.addReview(this.state.reviewToEdit);\r\n        this.setState({ reviewToEdit: { txt: '', aboutUserId: '' } });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                {this.props.reviews && <ul>\r\n                    {this.props.reviews.map(review => (\r\n                        <li key={review._id}>\r\n                            <h3>{review.txt}</h3>\r\n                            <p>\r\n                                    About {review.aboutToy.name}\r\n                            </p>\r\n                            <p>\r\n                                    By {review.byUser.username}\r\n                            </p>\r\n                            <hr />\r\n                        </li>\r\n                    ))}\r\n                </ul>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n        reviews: state.reviewReducer.reviews,\r\n        users: state.userReducer.users,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadReviews,\r\n    loadUsers,\r\n    addReview\r\n}\r\n\r\nexport const Review = connect(mapStateToProps, mapDispatchToProps)(_Review)","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\n\nimport {User} from './pages/User/UserDetails'\nimport {Home} from './pages/Home'\nimport {Login} from './pages/Login'\nimport { ToyApp } from './pages/Toy/ToyApp'\nimport {ToyDetails} from './pages/Toy/ToyDetails'\nimport { ToyEdit} from './pages/Toy/ToyEdit'\nimport {ToyBars} from './cmps/ToyBars'\nimport { Header } from './cmps/Header';\nimport {About} from './pages/About';\nimport { ToyReviews } from './pages/Toy/ToyReviews';\nimport {Review} from './pages/Review';\nimport { FaceRounded } from '@material-ui/icons';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Switch>\n        <Route component={ ToyEdit } path='/toy/edit/:toyId?' />\n        <Route component = { ToyReviews} path ='/toy/review/:toyId'/>\n        <Route component={ ToyDetails } path='/toy/:toyId' />\n        <Route component={ About } path='/about/:userId?' />\n        <Route component ={ ToyBars} path ='/toy/bar'/>\n        <Route component = {Review} path ='/review'/>\n        <Route component= {User} path ='/user'/>\n        <Route component={ ToyApp } path='/toy' />\n        <Route component = { Login} path ='/login'/>\n        <Route component= {Home} path ='/'/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    toys: []\r\n}\r\n\r\nexport function toyReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_TOYS':\r\n            return {\r\n                ...state,\r\n                toys: action.toys\r\n            }\r\n        case 'REMOVE_TOY':\r\n            return {\r\n                ...state,\r\n                toys: state.toys.filter(toys => toys._id !== action._id)\r\n            }\r\n            case 'SAVE_TOY':\r\n                return {...state, toys : state.toys.map(toy=>(toy._id === action.savedToy._id)? action.savedToy: toy)}\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\n\r\nlet localLoggedinUser = null;\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loggedInUser: localLoggedinUser,\r\n    cartItems: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return { ...state, loggedInUser: action.user };\r\n        case 'SET_USERS':\r\n            return { ...state, users: action.users };\r\n        case 'USER_REMOVE':\r\n            return {\r\n                ...state,\r\n                users: state.users.filter(user => user._id !== action.userId)\r\n            };\r\n        case 'ADD_TO_CART':\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems, action.toy]\r\n            }\r\n        case 'SPEND_BALANCE':\r\n            return {\r\n                ...state,\r\n                loggedinUser: {\r\n                    ...state.loggedinUser,\r\n                    balance: state.loggedinUser.balance - action.spendAmount\r\n                }\r\n            }\r\n        case 'CLEAR_CART':\r\n            return { ...state, cartItems: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n","const initialState = {\r\n  filterBy:{}\r\n}\r\n\r\n\r\nexport function filterReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_FILTER':\r\n      return { ...state, filterBy: action.filterBy }\r\n    default:\r\n      return state;\r\n  }\r\n}","const initialState = {\r\n  reviews: [],\r\n  selectedReview: null\r\n};\r\n\r\nexport function reviewReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_REVIEWS':\r\n      return { ...state, reviews: action.reviews };\r\n    case 'REVIEW_ADD':\r\n      console.log('reduce rev-', action.addedReview);\r\n      return { ...state, reviews: [...state.reviews, action.addedReview] };\r\n    case 'REVIEW_UPDATE':\r\n      return {\r\n        ...state,\r\n        reviews: state.reviews.map(review =>\r\n          review._id === action.review._id ? action.review : review\r\n        )};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { toyReducer } from './reducers/toyReducer';\r\nimport { userReducer } from './reducers/userReducer';\r\nimport { filterReducer } from './reducers/filterReducer';\r\nimport { reviewReducer } from './reducers/reviewReducer';\r\nimport { systemReducer } from './reducers/systemReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    toyReducer,\r\n    userReducer,\r\n    filterReducer,\r\n    reviewReducer,\r\n    systemReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './store/store';\nimport './assets/css/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}